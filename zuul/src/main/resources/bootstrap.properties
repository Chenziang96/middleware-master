# 参考下面的链接获得更多的配置信息：
# https://github.com/Nepxion/Discovery/blob/master/discovery-springcloud-example-zuul/src/main/resources/

# Spring cloud config
spring.application.name=discovery-guide-zuul
server.port=5002
middleware.host=localhost

# Nacos config for discovery
spring.cloud.nacos.discovery.server-addr=${middleware.host}:8848
spring.cloud.nacos.discovery.metadata.group=discovery-guide-group
spring.cloud.nacos.discovery.metadata.version=1.0

# Consul config for discovery
spring.cloud.consul.host=${middleware.host}
spring.cloud.consul.port=8500
spring.cloud.consul.discovery.tags=group=discovery-guide-group,version=1.0

# Eureka config for discovery
eureka.client.serviceUrl.defaultZone=http://${middleware.host}:9528/eureka/
eureka.instance.metadataMap.group=discovery-guide-group
eureka.instance.metadataMap.version=1.0

# Nacos config for rule
nacos.server-addr=${middleware.host}:8848

# Apollo config for rule
app.id=discovery
apollo.meta=http://${middleware.host}:8080

# Opentracing config for jaeger
opentracing.jaeger.enabled=true
opentracing.jaeger.udp-sender.host=${middleware.host}
opentracing.jaeger.udp-sender.port=6831

# Ribbon config
ribbon.ConnectTimeout=60000
ribbon.ReadTimeout=60000
ribbon.maxAutoRetries=3
ribbon.maxAutoRetriesNextServer=3
ribbon.okToRetryOnAllOperations=true

# Management config
management.endpoints.web.exposure.include=*
management.endpoints.jmx.exposure.include=*
management.endpoint.health.show-details=ALWAYS
management.metrics.tags.application=${spring.application.name}

# Spring boot admin config
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.client.url=http://${middleware.host}:6002

# ========== 下面的配置，对于一般的业务系统来说，可以全部不需要 ==========
# Plugin strategy config
# 当外界传值Header的时候，网关也设置并传递同名的Header，需要决定哪个Header传递到后边的服务去。如果下面开关为true，以网关设置为优先，否则以外界传值为优先。缺失则默认为true
spring.application.strategy.zuul.header.priority=false
# 当以网关设置为优先的时候，网关未配置Header，而外界配置了Header，仍旧忽略外界的Header。缺失则默认为true
# spring.application.strategy.zuul.original.header.ignored=true
# 启动和关闭注册的服务隔离（基于Group黑/白名单的策略）。缺失则默认为false
spring.application.strategy.register.isolation.enabled=true
# 启动和关闭消费端的服务隔离（基于Group是否相同的策略）。缺失则默认为false
spring.application.strategy.consumer.isolation.enabled=true
# 启动和关闭调用链。缺失则默认为false
spring.application.strategy.trace.enabled=true
# 启动和关闭调用链的日志输出。缺失则默认为false
spring.application.strategy.trace.logger.enabled=true
# 调用链的日志输出中，是否显示MDC前面的Key。缺失则默认为true
# spring.application.strategy.trace.logger.mdc.key.shown=true
# 启动和关闭调用链的Opentracing输出，支持F版或更高版本的配置，其它版本不需要该行配置。缺失则默认为false
spring.application.strategy.trace.opentracing.enabled=true
# 启动和关闭调用链的灰度信息在Opentracing中以独立的Span节点输出，如果关闭，则灰度信息输出到原生的Span节点中。缺失则默认为true
# spring.application.strategy.trace.opentracing.separate.span.enabled=true
# 启动和关闭调用链的Debug日志打印，注意每调用一次都会打印一次，会对性能有所影响，建议压测环境和生产环境关闭。缺失则默认为false
spring.application.strategy.trace.debug.enabled=true

# 开启和关闭使用服务名前缀来作为服务组名。缺失则默认为false
spring.application.group.generator.enabled=false
# 服务名前缀的长度，必须大于0
spring.application.group.generator.length=15

# 开启和关闭使用Git的git.commit.id或者git.build.version或者更多其它字段来作为服务版本号。缺失则默认为false
spring.application.git.generator.enabled=false
# 使用Git的git.commit.id或者git.build.version或者更多其它字段来作为服务版本号。缺失则默认为git.commit.id
# spring.application.git.version.key=git.commit.id
# spring.application.git.version.key=git.build.version
# ========================================================================

# Zuul config
zuul.host.max-per-route-connections=1000
zuul.host.max-total-connections=1000
zuul.semaphore.max-semaphores=5000
# 启用默认转发规则。可以不配置下面的路由
# zuul.routes.discovery-guide-service-a.path=/discovery-guide-service-a/**
# zuul.routes.discovery-guide-service-a.serviceId=discovery-guide-service-a
#zuul.routes.discovery-guide-service-b.path=/discovery-guide-service-b/**
#zuul.routes.discovery-guide-service-b.serviceId=discovery-guide-service-b
#zuul.routes.discovery-guide-service-c.path=/discovery-guide-service-c/**
#zuul.routes.discovery-guide-service-c.serviceId=discovery-guide-service-c

# logging.level.com.nepxion.discovery.guide=ERROR